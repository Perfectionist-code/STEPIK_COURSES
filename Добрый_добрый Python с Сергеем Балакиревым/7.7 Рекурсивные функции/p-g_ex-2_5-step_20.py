# –ù–∞–ø–∏—à–∏—Ç–µ –ø—Ä–æ–≥—Ä–∞–º–º—É, –∫–æ—Ç–æ—Ä–∞—è —Ä–∞—Å—Å—á–∏—Ç—ã–≤–∞–µ—Ç —Å—É–º–º—É –∏ –ø—Ä–æ–∏–∑–≤–µ–¥–µ–Ω–∏–µ —Ü–∏—Ñ—Ä –ø–æ–ª–æ–∂–∏—Ç–µ–ª—å–Ω–æ–≥–æ —Ç—Ä—ë—Ö–∑–Ω–∞—á–Ω–æ–≥–æ —á–∏—Å–ª–∞ –∏ –≤—ã–≤–æ–¥–∏—Ç —Ç–µ–∫—Å—Ç –≤ —Å–ª–µ–¥—É—é—â–µ–º —Ñ–æ—Ä–º–∞—Ç–µ:
#
# –°—É–º–º–∞ —Ü–∏—Ñ—Ä = <—Å—É–º–º–∞ —Ü–∏—Ñ—Ä>
# –ü—Ä–æ–∏–∑–≤–µ–¥–µ–Ω–∏–µ —Ü–∏—Ñ—Ä = <–ø—Ä–æ–∏–∑–≤–µ–¥–µ–Ω–∏–µ —Ü–∏—Ñ—Ä>
# –§–æ—Ä–º–∞—Ç –≤—Ö–æ–¥–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö
# –ù–∞ –≤—Ö–æ–¥ –ø—Ä–æ–≥—Ä–∞–º–º–µ –ø–æ–¥–∞—ë—Ç—Å—è –ø–æ–ª–æ–∂–∏—Ç–µ–ª—å–Ω–æ–µ —Ç—Ä—ë—Ö–∑–Ω–∞—á–Ω–æ–µ —á–∏—Å–ª–æ.
#
# –§–æ—Ä–º–∞—Ç –≤—ã—Ö–æ–¥–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö
# –ü—Ä–æ–≥—Ä–∞–º–º–∞ –¥–æ–ª–∂–Ω–∞ –≤—ã–≤–µ—Å—Ç–∏ —Ç–µ–∫—Å—Ç –≤ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–∏–∏ —Å —É—Å–ª–æ–≤–∏–µ–º –∑–∞–¥–∞—á–∏.
#
# –ü—Ä–∏–º–µ—á–∞–Ω–∏–µ. –û–±—Ä–∞—â–∞–π—Ç–µ –≤–Ω–∏–º–∞–Ω–∏–µ –Ω–∞ –ª–∏—à–Ω–∏–µ –ø—Ä–æ–±–µ–ª—ã –∏–ª–∏ –∏—Ö –æ—Ç—Å—É—Ç—Å—Ç–≤–∏–µ.
#
# –¢–µ—Å—Ç–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ üü¢
# Sample Input 1:
#
# 123
# Sample Output 1:
#
# –°—É–º–º–∞ —Ü–∏—Ñ—Ä = 6
# –ü—Ä–æ–∏–∑–≤–µ–¥–µ–Ω–∏–µ —Ü–∏—Ñ—Ä = 6
# Sample Input 2:
#
# 333
# Sample Output 2:
#
# –°—É–º–º–∞ —Ü–∏—Ñ—Ä = 9
# –ü—Ä–æ–∏–∑–≤–µ–¥–µ–Ω–∏–µ —Ü–∏—Ñ—Ä = 27
# Sample Input 3:
#
# 101
# Sample Output 3:
#
# –°—É–º–º–∞ —Ü–∏—Ñ—Ä = 2
# –ü—Ä–æ–∏–∑–≤–µ–¥–µ–Ω–∏–µ —Ü–∏—Ñ—Ä = 0


def sum_product(num, l):
    lst_numbers = []
    def cutting(num, i = 0):
        nonlocal l
        if i < l:
            lst_numbers.append(num % (10 ** (i + 1)) // 10 ** i)
            cutting(num, i + 1)
        return lst_numbers
    lst = cutting(num)
    s, p = 0, 1
    for n in lst:
        s += n
        p *= n
    return s, p


number = input()
length = len(number)
res = sum_product(int(number), length)
print('–°—É–º–º–∞ —Ü–∏—Ñ—Ä =', res[0])
print('–ü—Ä–æ–∏–∑–≤–µ–¥–µ–Ω–∏–µ —Ü–∏—Ñ—Ä =', res[1])

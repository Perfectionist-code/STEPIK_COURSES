# Подвиг 3. Объявите функцию, которая принимает строку с кириллицей (и другими символами) и преобразовывает русские буквы в латиницу, используя следующий словарь для замены русских букв на соответствующее латинское написание:
#
# t = {'ё': 'yo', 'а': 'a', 'б': 'b', 'в': 'v', 'г': 'g', 'д': 'd', 'е': 'e', 'ж': 'zh',
#      'з': 'z', 'и': 'i', 'й': 'y', 'к': 'k', 'л': 'l', 'м': 'm', 'н': 'n', 'о': 'o', 'п': 'p',
#      'р': 'r', 'с': 's', 'т': 't', 'у': 'u', 'ф': 'f', 'х': 'h', 'ц': 'c', 'ч': 'ch', 'ш': 'sh',
#      'щ': 'shch', 'ъ': '', 'ы': 'y', 'ь': '', 'э': 'e', 'ю': 'yu', 'я': 'ya'}
# Функция должна возвращать преобразованную строку. Замены делать без учета регистра (переданную строку перевести в нижний регистр - малые буквы).
#
# Определите декоратор с параметром chars и начальным значением " !?", который данные символы преобразует в символ "-" и, кроме того, все подряд идущие дефисы (например, "--" или "---") приводит к одному дефису. Полученный результат должен возвращаться в виде строки.
#
# Примените декоратор с аргументом chars="?!:;,. " к функции и вызовите декорированную функцию для строки s:
#
# s = input()
# Результат работы декорированной функции отобразите на экране.
#
# Тесты: https://github.com/selfedu-rus/test-python-base/tree/main/7/7.12.3
#
# Sample Input:
#
# Декораторы - это круто!
# Sample Output:
#
# dekoratory-eto-kruto-

t = {'ё': 'yo', 'а': 'a', 'б': 'b', 'в': 'v', 'г': 'g', 'д': 'd', 'е': 'e', 'ж': 'zh',
     'з': 'z', 'и': 'i', 'й': 'y', 'к': 'k', 'л': 'l', 'м': 'm', 'н': 'n', 'о': 'o', 'п': 'p',
     'р': 'r', 'с': 's', 'т': 't', 'у': 'u', 'ф': 'f', 'х': 'h', 'ц': 'c', 'ч': 'ch', 'ш': 'sh',
     'щ': 'shch', 'ъ': '', 'ы': 'y', 'ь': '', 'э': 'e', 'ю': 'yu', 'я': 'ya'}


def cut_dashes(chars=' !?'):
    def func_decorator(func):
        def wrapper(*args, **kwargs):
            trans_string = func(_str)
            for char in trans_string:
                if char in chars:
                    trans_string = trans_string.replace(char, '-')
            while '--' in trans_string:
                trans_string = trans_string.replace('--', '-')
            return trans_string

        return wrapper

    return func_decorator


@cut_dashes('?!:;,. ')
def translit_string(*args, **kwargs):
    _str_lower = _str.lower()
    for char in _str_lower:
        if char in t:
            _str_lower = _str_lower.replace(char, t[char])
    return _str_lower


_str = input()
# _str = 'Декораторы - это круто!'
print(translit_string(_str))

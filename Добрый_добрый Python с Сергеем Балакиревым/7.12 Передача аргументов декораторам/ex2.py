# Подвиг 2. Объявите функцию, которая переводит символы строки в нижний регистр (малые буквы) и возвращает результат.
# Определите декоратор для этой функции, который имеет один параметр tag, определяющий строку с названием тега и начальным значением "h1". Этот декоратор должен заключать возвращенную функцией строку в тег tag и возвращать результат.
#
# Пример заключения строки "python" в тег h1:
#
# <h1>python</h1>
#
# Примените декоратор со значением tag="div" к функции и вызовите декорированную функцию для строки s, прочитанной из входного потока:
#
# s = input()
# Результат работы декорированной функции отобразите на экране.
#
# Тесты: https://github.com/selfedu-rus/test-python-base/tree/main/7/7.12.2
#
# Sample Input:
#
# Декораторы - это классно!
# Sample Output:
#
# <div>декораторы - это классно!</div>

def add_tag(tag='h1'):
    def func_decorator(func):
        def wrapper(*args, **kwargs):

            return f'<{tag}>{func(_str)}</{tag}>'

        return wrapper

    return func_decorator


@add_tag('div')
def get_lower(_str1):
    return _str1.lower()


_str = input()
print(get_lower(_str))

# Подвиг 2. Мы с вами в заданиях несколько раз генерировали последовательность чисел Фибоначчи, которая строится по правилу: каждое последующее число равно сумме двух предыдущих. Для разнообразия давайте будем генерировать каждое последующее как сумму трех предыдущих чисел. При этом первые три числа равны 1. Получаем такую последовательность:
#
# 1, 1, 1, 3, 5, 9, 17, 31, 57, ...
#
# Не знаю, есть ли у нее название, поэтому, в рамках уроков, я скромно назову ее последовательностью Балакирева.
#
# Итак, на вход программе поступает натуральное число N (N > 5), которое необходимо прочитать и сохранить в переменной. Затем (или в начале программы), объявить функцию-генератор с сигнатурой:
#
# def balak_seq(max_len): ...
# которая бы возвращала max_len = N первых чисел последовательности Балакирева (включая первые три единицы).
#
# Реализуйте эту функцию без использования коллекций (списков, кортежей, словарей и т.п.). Вызовите ее N раз для получения N чисел и выведите полученные числа на экран в одну строчку через пробел.
#
# Тесты: https://github.com/selfedu-rus/test-python-base/tree/main/9/9.2.2
#
# Sample Input:
#
# 7
# Sample Output:
#
# 1 1 1 3 5 9 17


# def balak_seq(max_len):
#     for i in range(1, max_len + 1):
#         a = range(1, i + 1)
#         yield sum(a)
#
#
# N = int(input())
# S = get_sum(N)
# print(*S)


# put your python code here
def get_balakirev(N):
    a, b, c = 1, 1, 1
    for i in range(N):
        if i < 4:
            yield 1
        else:
            a, b, c = b, c, a + b + c
            yield c


N = int(input())
S = get_balakirev(N)
print(*S)

# Подвиг 1. На вход программе подается натуральное число N. Оно уже читается в программе командой:
#
# N = int(input())
# Объявите в программе функцию-генератор с именем get_sum с сигнатурой:
#
# def get_sum(total): ...
# которая бы возвращала текущую сумму чисел последовательности длины total = N в диапазоне целых чисел [1; N] (включительно). То есть, при вызове get_sum в качестве аргумента передается переменная N. В результате должны получить следующие результаты работы функции-генератора:
#
# при первом вызове get_sum возвращает сумму 1;
# при втором вызове get_sum возвращает сумму чисел 1+2 = 3;
# при третьем вызове get_sum возвращает сумму чисел 1+2+3 = 6;
# ....
# для N-го вызова get_sum возвращает сумму
# 1
# +
# 2
# +
# .
# .
# .
# +
# (
# N
# −
# 1
# )
# +
# N
# 1+2+...+(N−1)+N.
# Реализовать функцию-генератор get_sum без использования коллекций. Вызывать ее не нужно, только объявить.
#
# Тесты: https://github.com/selfedu-rus/test-python-base/tree/main/9/9.2.1
#
# Sample Input:
#
# 5
# Sample Output:
#
# 1 3 6 10 15


def get_sum(total):
    for i in range(1, total + 1):
        a = range(1, i + 1)
        yield sum(a)


N = int(input())
S = get_sum(N)
print(*S)
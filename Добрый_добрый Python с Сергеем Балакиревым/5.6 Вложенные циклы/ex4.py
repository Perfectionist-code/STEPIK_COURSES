# Подвиг 4. На вход программе подается двумерный список размерностью 5 х 5 элементов, состоящий из нулей и в некоторых позициях единицы (см. пример ниже). В программе уже реализовано их чтение и сохранение в списке:
#
# s = sys.stdin.readlines()
# lst_in = [list(map(int, x.strip().split())) for x in s]
# Требуется проверить, не касаются ли единицы друг друга по горизонтали, вертикали и диагонали. То есть, вокруг каждой единицы должны быть нули. Если проверка проходит вывести на экран "ДА", иначе "НЕТ".
#
# Тесты: https://github.com/selfedu-rus/test-python-base/tree/main/5/5.6.4
#
# Sample Input:
#
# 1 0 0 0 0
# 0 0 1 0 1
# 0 0 0 0 0
# 0 1 0 1 0
# 0 0 0 0 0
# Sample Output:
#
# ДА

import sys
# считывание списка из входного потока
s = sys.stdin.readlines()
lst_in = [list(map(int, x.strip().split())) for x in s]
flag = True
# lst_in = [[1, 0, 0, 0, 0], для отладки программы, чтобы каждый раз не вводить матрицу.
#           [0, 0, 1, 0, 1], значения матрицы для проверки меняем вручную.
#           [0, 0, 0, 0, 0],
#           [0, 1, 0, 1, 0],
#           [0, 0, 0, 0, 0]]
# Последовательно перебираем квадраты 2х2 и сравниваем их сумму с 1.
# Если встречается сумма больше 1, то флаг переводим в значение False и прерываем оба цикла

for i in range(len(lst_in) - 1):
    if flag:
        for j in range(len(lst_in[i]) - 1):
            if flag:
                summa = 0
                for k in range(0, 2):
                    summa += lst_in[i][j + k] + lst_in[i + 1][j + k]
                # print(summa, end = ' ') # просмотр сумм по квадратам 2х2 для отладки
                if summa <= 1:
                    flag = True
                else:
                    flag = False
                    break
            else:
                flag = False
                break
    else:
        break
if flag:
    print('ДА')
else:
    print('НЕТ')
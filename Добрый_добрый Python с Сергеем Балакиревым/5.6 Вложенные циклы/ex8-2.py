# Подвиг 8. В некоторой стране используются денежные купюры достоинством в 1, 2, 4, 8, 16, 32 и 64. На вход программы подается натуральное число n. Необходимо его прочитать. Затем определите, каким наименьшим количеством денежных купюр достоинством в 1, 2, 4, 8, 16, 32 и 64 можно выплатить сумму n? выведите на экран список купюр для формирования суммы n (в одну строчку через пробел, начиная с наибольшей и заканчивая наименьшей). Предполагается, что имеется достаточно большое количество купюр всех достоинств.
#
# P.S. Программа может быть реализована и без вложенных циклов.
#
# Тесты: https://github.com/selfedu-rus/test-python-base/tree/main/5/5.6.8
#
# Sample Input:
#
# 221
# Sample Output:
#
# 64 64 64 16 8 4 1

# считывание списка из входного потока
price = int(input())
banknote = [1, 5, 10, 50, 100, 200, 500, 1000, 2000, 5000] # список банкнот
banknote.reverse()
remains = price
cash = []
for i in banknote:
        if remains != 0:
            if remains // i != 0:
                count_banknotes = remains // i
                cash.append([i] * count_banknotes)
                # или print(f'{i} '* count_banknotes, end = ' ') уже без print и преобразования списка в конце
                remains -= i * count_banknotes
cash = [x for y in cash for x in y] # преобразование списка из двухмерного в одномерный
print(*cash)